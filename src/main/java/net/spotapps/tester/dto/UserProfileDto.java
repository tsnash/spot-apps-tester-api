package net.spotapps.tester.dto;

import java.util.List;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyDescription;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import net.spotapps.tester.model.UserProfile;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
    "userId",
    "images",
    "contact",
    "location",
    "social",
    "gender",
    "relationship",
    "children",
    "age",
    "religion",
    "education",
    "language",
    "vice",
    "pets",
    "travel",
    "diet",
    "interests"
})
public class UserProfileDto {

    @JsonProperty(required = true)
    @JsonPropertyDescription("The unique identifier, generated by UserProfileService on addition")
    private Long userId;

    @JsonProperty(required = true)
    @JsonPropertyDescription("List of references to images of the user")
    private List<UserImageDto> images;

    @JsonProperty(required = true)
    @JsonPropertyDescription("The things and activities the user is interested in")
    private List<UserInterestDto> interests;

    public UserProfileDto() {
    }

    public Long getUserId() {
        return userId;
    }

    public void setUserId(Long userId) {
        this.userId = userId;
    }

    public List<UserImageDto> getImages() {
        return images;
    }

    public void setImages(List<UserImageDto> images) {
        this.images = images;
    }

    public List<UserInterestDto> getInterests() {
        return interests;
    }

    public void setInterests(List<UserInterestDto> interests) {
        this.interests = interests;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((userId == null) ? 0 : userId.hashCode());
        result = prime * result + ((images == null) ? 0 : images.hashCode());
        result = prime * result + ((interests == null) ? 0 : interests.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        UserProfileDto other = (UserProfileDto) obj;
        if (userId == null) {
            if (other.userId != null)
                return false;
        } else if (!userId.equals(other.userId))
            return false;
        if (images == null) {
            if (other.images != null)
                return false;
        } else if (!images.equals(other.images))
            return false;
        if (interests == null) {
            if (other.interests != null)
                return false;
        } else if (!interests.equals(other.interests))
            return false;
        return true;
    }

    @Override
    public String toString() {
        return "UserProfileDto [userId=" + userId + ", images=" + images + ", interests=" + interests + "]";
    }

    public static UserProfileDto convertUserProfileToDto(final UserProfile userProfile) {

        UserProfileDto dto = new UserProfileDto();
        dto.setUserId(userProfile.getUserId());

        if(userProfile.getImages() != null) {
            dto.setImages(userProfile.getImages().stream()
                .map(image -> {
                    UserImageDto imageDto = new UserImageDto();
                    imageDto.setImageId(image.getImageId());
                    imageDto.setImage(image.getImage());
                    return imageDto;
                })
                .toList());
        }

        if(userProfile.getInterests() != null) {
            dto.setInterests(userProfile.getInterests().stream()
                .map(interest -> {
                    UserInterestDto interestDto = new UserInterestDto();
                    interestDto.setInterestId(interest.getInterestId());
                    interestDto.setInterest(interest.getInterest());
                    return interestDto;
                })
                .toList());
        }

        return dto;
    }
    
}
